@model Dominio.Core.Entities.tb_Usuario

@{
    ViewBag.Title = "Registrar Nuevo Usuario";
}

<h2>Registro de Usuario</h2>

@if (TempData["Exito"] != null)
{
    <div class="alert alert-success">
        @TempData["Exito"]
    </div>
}

@using (Html.BeginForm("Registrar", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.nombres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.nombres, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nombres, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.apellidos, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.dni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.dni, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.idRol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idRol", (SelectList)ViewBag.roles, "Seleccione un rol", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idRol, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.login, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.login, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.correo, new { @class = "form-control", type = "email" })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        @if (ViewBag.mensaje != null)
        {
            <div class="alert alert-danger">
                @ViewBag.mensaje
            </div>
        }
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrar" class="btn btn-success" />
                @Html.ActionLink("Regresar", "IniciarSesion", "Usuario", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}
